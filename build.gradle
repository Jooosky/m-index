apply plugin: 'java'
apply plugin: 'project-report'
apply plugin: 'idea'

description = 'M-Index implementation in Java'
version = '0.2'

sourceCompatibility = '1.7'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.mapvine:gradle-cobertura-plugin:1.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "net.jcip:jcip-annotations:1.0"
    compile "org.slf4j:slf4j-api:1.7.2"
    compile "org.apache.commons:commons-math3:3.1"
    testCompile "org.perf4j:perf4j:0.9.16"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile 'org.testng:testng:6.7'
    testRuntime 'ch.qos.logback:logback-classic:1.0.9'
}


test {
    jvmArgs "-XX:-UseSplitVerifier"
    useTestNG() {
        excludeGroups 'longRunning,perf'
    }
}

ext.perfTestCounter = 0;

ext.defaultTestJvmArgs = ['-Xmn2048m', '-verbose:gc', '-XX:+PrintGCDetails', '-XX:+PrintGCApplicationStoppedTime', '-XX:+PrintGCTimeStamps', '-Xloggc:gc.log']
ext.testsJvmArgs =
    [['-XX:+AggressiveOpts', ''], ['-XX:+UseCompressedOops', '-XX:-UseCompressedOops'], ['-XX:+UseG1GC', '-XX:-UseParallelOldGC', '-XX:+UseParallelGC', '-XX:+UseSerialGC',
            [['-XX:+UseConcMarkSweepGC'], ['-XX:-UseParNewGC', '-XX:+UseParNewGC']].combinations()]].combinations()


testsJvmArgs.each { testJvmArgs ->
    task "perfTest${perfTestCounter++}"(type: Test) {
        include '**/*PerfTest*'

        dependsOn { test }
        minHeapSize = "6192m"
        maxHeapSize = "6192m"

        // Reference file for M-Index performance testing
        systemProperty 'mindex.reference.file', 'src/test/resources/ColorHistogram.txt'

        jvmArgs = (testJvmArgs << defaultTestJvmArgs).flatten()

        logger.quiet("Created ${name} with jvmArgs: ${jvmArgs}")

        useTestNG()

        beforeTest { descriptor ->
            logger.lifecycle("Running test: " + descriptor)
        }
    }
}

task perfTest {
    dependsOn {
        tasks.findAll { task -> task.name ==~ 'perfTest\\d+' }
    }
}
